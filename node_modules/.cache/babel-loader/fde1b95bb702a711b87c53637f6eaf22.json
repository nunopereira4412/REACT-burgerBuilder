{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/projects/burger_project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport classes from '../../components/UI/Modal/modal.module.css';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 0.4,\n  cheese: 1.3,\n  meat: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredientCount = this.state.ingredients[type] + 1;\n      const updatedPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedIngredientCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredientCount = this.state.ingredients[type] - 1;\n      const updatedTotalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedIngredientCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedTotalPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(ingredient => ingredients[ingredient]).reduce((sum, el) => sum + el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    console.log(\"[BurgerBuilder.js] constructor\");\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        className: classes.Modal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        addIngredient: this.addIngredientHandler,\n        removeIngredient: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        totalPrice: this.state.totalPrice,\n        purchasable: this.state.purchasable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/projects/burger_project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","classes","Aux","Burger","BuildControls","Modal","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","constructor","props","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","updatedIngredientCount","updatedPrice","updatedIngredients","setState","updatePurchaseState","removeIngredientHandler","updatedTotalPrice","sum","Object","keys","map","ingredient","reduce","el","console","log","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport classes from '../../components/UI/Modal/modal.module.css';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    bacon: 0.4,\n    cheese: 1.3,\n    meat: 0.7    \n};\n\nclass BurgerBuilder extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"[BurgerBuilder.js] constructor\");\n    }\n\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false\n    }\n\n    addIngredientHandler = (type) => {\n        const updatedIngredientCount = this.state.ingredients[type] + 1;\n        const updatedPrice           = this.state.totalPrice + INGREDIENT_PRICES[type];\n        const updatedIngredients     = {...this.state.ingredients};\n        updatedIngredients[type] = updatedIngredientCount;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: updatedPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const updatedIngredientCount = this.state.ingredients[type] - 1;    \n        const updatedTotalPrice      = this.state.totalPrice - INGREDIENT_PRICES[type];\n        const updatedIngredients     = {...this.state.ingredients};\n        updatedIngredients[type]     = updatedIngredientCount;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: updatedTotalPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map((ingredient) => ingredients[ingredient])\n                .reduce((sum, el) => sum + el, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    render() {\n        \n        const disabledInfo = {...this.state.ingredients};\n        for(let key in disabledInfo) \n            disabledInfo[key] = disabledInfo[key] <= 0;\n\n        return (\n            <Aux>\n                <Modal className={classes.Modal}/>\n                <Burger ingredients={this.state.ingredients}></Burger>\n                <BuildControls \n                    addIngredient={this.addIngredientHandler}\n                    removeIngredient={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    totalPrice={this.state.totalPrice}\n                    purchasable={this.state.purchasable}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}