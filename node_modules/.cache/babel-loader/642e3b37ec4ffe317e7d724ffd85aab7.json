{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nunopereira/Desktop/js/react/projects/burger_project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 0.4,\n  cheese: 1.3,\n  meat: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredientCount = this.state.ingredients[type] + 1;\n      const updatedPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedIngredientCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredientCount = this.state.ingredients[type] - 1;\n      const updatedTotalPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedIngredientCount;\n      this.setState({\n        ingredients: updatedIngredients,\n        totalPrice: updatedTotalPrice\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(ingredient => ingredients[ingredient]).reduce((sum, el) => sum + el, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.updatePurchasingState = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.backdropWasClicked = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.modalCancelled = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    console.log(\"[BurgerBuilder.js] constructor\");\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    return /*#__PURE__*/_jsxDEV(Aux, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        backdropClicked: this.backdropWasClicked,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          modalCancel: this.modalCancelled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        addIngredient: this.addIngredientHandler,\n        removeIngredient: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        totalPrice: this.state.totalPrice,\n        purchasable: this.state.purchasable,\n        orderBtnClicked: this.updatePurchasingState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/nunopereira/Desktop/js/react/projects/burger_project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","constructor","props","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","updatedIngredientCount","updatedPrice","updatedIngredients","setState","updatePurchaseState","removeIngredientHandler","updatedTotalPrice","sum","Object","keys","map","ingredient","reduce","el","updatePurchasingState","backdropWasClicked","modalCancelled","console","log","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport Aux           from '../../hoc/Aux';\nimport Burger        from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal         from '../../components/UI/Modal/Modal';\nimport OrderSummary  from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad:  0.5,\n    bacon:  0.4,\n    cheese: 1.3,\n    meat:   0.7    \n};\n\nclass BurgerBuilder extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"[BurgerBuilder.js] constructor\");\n    }\n\n    state = {\n        ingredients: {\n            salad:  0,\n            bacon:  0,\n            cheese: 0,\n            meat:   0\n        },\n        totalPrice:  4,\n        purchasable: false,\n        purchasing:  false\n    }\n\n    addIngredientHandler = (type) => {\n        const updatedIngredientCount = this.state.ingredients[type] + 1;\n        const updatedPrice           = this.state.totalPrice + INGREDIENT_PRICES[type];\n        const updatedIngredients     = {...this.state.ingredients};\n        updatedIngredients[type]     = updatedIngredientCount;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: updatedPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const updatedIngredientCount = this.state.ingredients[type] - 1;    \n        const updatedTotalPrice      = this.state.totalPrice - INGREDIENT_PRICES[type];\n        const updatedIngredients     = {...this.state.ingredients};\n        updatedIngredients[type]     = updatedIngredientCount;\n        this.setState({\n            ingredients: updatedIngredients,\n            totalPrice: updatedTotalPrice\n        });\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    updatePurchaseState = (ingredients) => {\n        const sum = Object.keys(ingredients)\n            .map((ingredient) => ingredients[ingredient])\n                .reduce((sum, el) => sum + el, 0);\n        this.setState({purchasable: sum > 0});\n    }\n\n    updatePurchasingState = () => {\n        this.setState({purchasing: true});\n    }\n\n    backdropWasClicked = () => {\n        this.setState({purchasing: false});\n    }\n    \n    modalCancelled = () => {\n        this.setState({purchasing: false});\n    }\n\n    render() {\n        const disabledInfo = {...this.state.ingredients};\n        for(let key in disabledInfo) \n            disabledInfo[key] = disabledInfo[key] <= 0;\n\n        return (\n            <Aux>\n                <Modal \n                    show            = {this.state.purchasing}\n                    backdropClicked = {this.backdropWasClicked}\n                    >\n                    <OrderSummary \n                        ingredients = {this.state.ingredients}\n                        modalCancel = {this.modalCancelled}\n                    />\n                </Modal>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                    addIngredient    = {this.addIngredientHandler}\n                    removeIngredient = {this.removeIngredientHandler}\n                    disabled         = {disabledInfo}\n                    totalPrice       = {this.state.totalPrice}\n                    purchasable      = {this.state.purchasable}\n                    orderBtnClicked       = {this.updatePurchasingState}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}